/*Written by Josh Kennerly and Justin Schulz*/
CREATE SCHEMA Pizzeria;
USE Pizzeria;

CREATE TABLE TOPPINGS(
TOPPING_ID VARCHAR(20) UNIQUE AUTO_INCREMENT NOT NULL,
TOPPING_NAME VARCHAR(255) NOT NULL,
TOPPING_PRICE FLOAT NOT NULL,
TOPPING_COST FLOAT NOT NULL,
TOPPING_INVENTORY INT NOT NULL,
TOPPING_SMALL FLOAT NOT NULL,
TOPPING_MED FLOAT NOT NULL,
TOPPING_LARGE FLOAT NOT NULL,
TOPPING_XL FLOAT NOT NULL,
PRIMARY KEY (TOPPING_ID)
);

CREATE TABLE PIZZAS(
PIZZA_ID INT UNIQUE AUTO_INCREMENT NOT NULL,
PIZZA_SIZE VARCHAR(255) NOT NULL,
PIZZA_CRUST VARCHAR(255) NOT NULL,
FOREIGN KEY (TOPPING_ID) REFERENCES TOPPINGS(TOPPING_ID),
FOREIGN KEY (PIZZA_COST) REFERENCES COST(PIZZA_COST),
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
PRIMARY KEY (PIZZA_ID)
);

CREATE TABLE ORDERS(
ORDER_ID INT UNIQUE AUTO_INCREMENT NOT NULL,
ORDER_DATE_MONTH VARCHAR(255) NOT NULL,
ORDER_DATE_DAY INT NOT NULL,
ORDER_DATE_TIME VARCHAR(255) NOT NULL,
ORDER_TYPE VARCHAR(255) NOT NULL,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY (PIZZA_COST) REFERENCES COST(PIZZA_COST),
PRIMARY KEY (ORDER_ID)
);

CREATE TABLE CUSTOMER(
CUSTOMER_ID INT UNIQUE AUTO_INCREMENT NOT NULL,
CUSTOMER_NAME VARCHAR(255),
CUSTOMER_PHONE VARCHAR(255),
PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE DINE_IN(
TABLE_NUM INT NOT NULL,
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),    
PRIMARY KEY (CUSTOMER_ID, ORDER_ID)
);

CREATE TABLE TAKEOUT(
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (CUSTOMER_NAME) REFERENCES CUSTOMER(CUSTOMER_ID),
PRIMARY KEY (CUSTOMER_ID, ORDER_ID)
);

CREATE TABLE DELIVERY(
CUSTOMER_ADDRESSS VARCHAR(255),
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
PRIMARY KEY (ORDER_ID, CUSTOMER_ID)
);

CREATE TABLE DISCOUNTS(
DISCOUNT_NAME VARCHAR(255) NOT NULL,
DISCOUNT_PERCENT FLOAT NOT NULL,
DISCOUNT_CASH FLOAT NOT NULL,
PRIMARY KEY (DISCOUNT_NAME)
);

CREATE TABLE BASE_PRICE(
PIZZA_CRUST VARCHAR(255) NOT NULL,
PIZZA_SIZE VARCHAR(255) NOT NULL,
PIZZA_COST FLOAT NOT NULL,
PIZZA_PRICE FLOAT NOT NULL,
FOREIGN KEY (PIZZA_CRUST) REFERENCES PIZZA(PIZZA_CRUST),
FOREIGN KEY (PIZZA_SIZE) REFERENCES PIZZA(PIZZA_SIZE),
PRIMARY KEY (PIZZA_CRUST, PIZZA_SIZE)
);

CREATE TABLE TOTAL_TOPS(
PIZZA_ID INT NOT NULL,
TOPPING_ID VARCHAR(255) NOT NULL,
TOPPING_EXTRA BOOL NOT NULL,
FOREIGN KEY (PIZZA_ID) REFERENCES PIZZA(PIZZA_ID),
FOREIGN KEY (TOPPING_ID) REFERENCES TOPPING(TOPPING_ID),   
PRIMARY KEY (PIZZA_ID, TOPPING_ID)
);

CREATE TABLE DISCOUNT_PIZZA(
PIZZA_ID INT NOT NULL,
DISCOUNT_ID VARCHAR(255) NOT NULL,
FOREIGN KEY (PIZZA_ID) REFERENCES PIZZA(PIZZA_ID),
FOREIGN KEY (DISCOUNT_NAME) REFERENCES DISCOUNTS(DISCOUNT_NAME),
PRIMARY KEY (PIZZA_ID, DISCOUNT_NAME)
);

CREATE TABLE DISCOUNT_ORDER(
ORDER_ID INT NOT NULL,
DISCOUNT_ID VARCHAR(255) NOT NULL,
FOREIGN KEY (ORDER_ID) REFERENCES PIZZA_ORDER(ORDER_ID),
FOREIGN KEY (DISCOUNT_NAME) REFERENCES DISCOUNTS(DISCOUNT_NAME),
PRIMARY KEY (ORDER_ID, DISCOUNT_NAME)
);

CREATE TABLE TOTAL_ORDER(
TOTAL_ORDER_ID INT AUTO_INCREMENT NOT NULL,
PRICE_CUST INT NOT NULL,
FOREIGN KEY (PIZZA_ID) REFERENCES PIZZA(PIZZA_ID),
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (DISCOUNT_NAME) REFERENCES DISCOUNT_ORDER(DISCOUNT_NAME)
);
